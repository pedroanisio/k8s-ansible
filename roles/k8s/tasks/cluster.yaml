# github/devops/roles/kubernetes/tasks/main.yaml
---
- name: Install required packages
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Turn off swap
  command: swapoff -a
  ignore_errors: true  # Optional: You might want to ignore errors if swap is already off

- name: Check if the Kubernetes GPG key is already imported
  ansible.builtin.stat:
    path: "{{ k8s_apt_key_path }}"
  register: k8s_key

- block:
    - name: Fetch Kubernetes Release Key with curl
      ansible.builtin.command:
        cmd: curl -fsSL {{ k8s_gpg_key_url }}
        chdir: /tmp/
      register: curl_result
      changed_when: curl_result.rc == 0

    - name: Write the key to a file
      ansible.builtin.copy:
        content: "{{ curl_result.stdout }}"
        dest: /tmp/Release.key
        mode: '0644'

    - name: Import the Release Key with gpg and copy to the correct directory
      ansible.builtin.shell: |
        gpg --dearmor -o {{ k8s_apt_key_path }} < /tmp/Release.key
      args:
        creates: "{{ k8s_apt_key_path }}"
  when: not k8s_key.stat.exists

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by={{ k8s_apt_key_path }}] {{k8s_apt_repo}} /
    filename: kubernetes
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes      

- name: Install Kubernetes packages
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Create the containerd configuration directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Generate containerd configuration file
  ansible.builtin.shell:
    cmd: containerd config default
    executable: /bin/bash
  register: containerd_config
  changed_when: false  # Ensures this task does not report a change every time

- name: Generate containerd default configuration
  ansible.builtin.command:
    cmd: containerd config default
  register: containerd_config
  changed_when: false  # Avoid reporting changes here

- name: Write containerd configuration to file
  ansible.builtin.copy:
    dest: /etc/containerd/config.toml
    content: "{{ containerd_config.stdout }}"
    mode: '0644'

- name: Set SystemdCgroup to true in the containerd configuration
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup\s*=\s*false'
    line: 'SystemdCgroup = true'
    backrefs: yes
  register: line_change

- name: Restart containerd service
  ansible.builtin.systemd:
    name: containerd
    state: restarted
  when: line_change.changed

- name: Enable containerd service
  ansible.builtin.systemd:
    name: containerd
    enabled: yes
    state: started

- name: Add kernel modules to load on boot
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    mode: '0644'
    owner: root
    group: root

- name: Set sysctl parameters for Kubernetes
  ansible.builtin.copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    mode: '0644'
    owner: root
    group: root
  notify: reload sysctl

- name: Load overlay kernel module
  ansible.builtin.modprobe:
    name: overlay
    state: present

- name: Load br_netfilter kernel module
  ansible.builtin.modprobe:
    name: br_netfilter
    state: present
